definitions:
  model.Menu:
    properties:
      action:
        type: string
      breadcrumb:
        type: string
      children:
        items:
          $ref: '#/definitions/model.Menu'
        type: array
      component:
        type: string
      createBy:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      icon:
        type: string
      is_select:
        type: boolean
      isFrame:
        type: string
      menuId:
        type: integer
      menuName:
        type: string
      menuType:
        type: string
      noCache:
        type: boolean
      params:
        type: string
      parentId:
        type: integer
      path:
        type: string
      paths:
        type: string
      permission:
        type: string
      roleId:
        type: integer
      sort:
        type: integer
      title:
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
      visible:
        type: string
    type: object
  model.Role:
    properties:
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      menuIds:
        items:
          type: integer
        type: array
      params:
        type: string
      remark:
        type: string
      roleId:
        type: integer
      roleKey:
        type: string
      roleName:
        type: string
      roleSort:
        type: integer
      status:
        type: integer
      updateBy:
        type: string
      updatedAt:
        type: string
    type: object
  response.Page:
    properties:
      count:
        type: integer
      list:
        type: object
      pageIndex:
        type: integer
      pageSize:
        type: integer
    type: object
  response.PageResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/response.Page'
        type: object
      msg:
        type: string
    type: object
  response.Res:
    properties:
      code:
        type: integer
      data:
        type: object
      error:
        type: string
      msg:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /api/v1/menu:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      summary: 创建菜单
      tags:
      - Menu
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      responses:
        "200":
          description: '{"code": -1, "message": "修改失败"}'
          schema:
            type: string
      summary: 修改菜单
      tags:
      - Menu
  /api/v1/menu/{id}:
    delete:
      description: 删除数据
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除菜单
      tags:
      - Menu
  /api/v1/menulist:
    get:
      description: 获取JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      - description: visible
        in: query
        name: visible
        type: string
      - description: title
        in: query
        name: title
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      summary: Menu列表数据
      tags:
      - Menu
  /api/v1/role:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      summary: 创建角色
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      responses:
        "200":
          description: '{"code": -1, "message": "修改失败"}'
          schema:
            type: string
      summary: 修改用户角色
      tags:
      - Role
  /api/v1/role/{roleId}:
    get:
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      summary: 获取Role数据
      tags:
      - Role
  /api/v1/rolelist:
    get:
      description: Get JSON
      parameters:
      - description: roleName
        in: query
        name: roleName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: rolekey
        in: query
        name: rolekey
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.PageResponse'
      summary: 角色列表数据
      tags:
      - Role
  /login:
    post:
      parameters:
      - description: admin
        in: formData
        name: username
        required: true
        type: string
      - description: admin@123
        in: formData
        name: password
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Res'
      summary: 用户登录
      tags:
      - user
  /query:
    post:
      description: 查询登录状态，并返回user
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Res'
      summary: 查询登录状态，并返回user
      tags:
      - user
  /user/add:
    post:
      parameters:
      - description: dahuang
        in: formData
        name: username
        required: true
        type: string
      - description: 大黄
        in: formData
        name: nickname
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Res'
      summary: 管理员添加用户
      tags:
      - user
  /user/logout:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Res'
      summary: 注销登录
      tags:
      - user
swagger: "2.0"
